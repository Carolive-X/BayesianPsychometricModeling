y = 6
J = 10
alpha = 6
beta = 6
x = seq(.001, .999, .001)
y = dbeta(x = x, shape1 = (y + alpha), shape2 = (J - y + beta))
map = x[which(y==max(y))]
plot(x = x, y = y, type = "l", xlab = expression(theta), ylab = expression(paste("p(", theta, ")")), main = paste("Max =", map))
lines(x = c(map, map), y = c(0, dbeta(x = map, shape1 = (y + alpha), shape2 = (J - y + beta))), lty = 2)
c(0, dbeta(x = map, shape1 = (y + alpha), shape2 = (J - y + beta)))
y = 6
J = 10
alpha = 6
beta = 6
xcoord = seq(.001, .999, .001)
ycoord = dbeta(x = x, shape1 = (y + alpha), shape2 = (J - y + beta))
map = x[which(y==max(ycoord))]
plot(x = xcoord, y = ycoord, type = "l", xlab = expression(theta), ylab = expression(paste("p(", theta, ")")), main = paste("Max =", map))
lines(x = c(map, map), y = c(0, dbeta(x = map, shape1 = (y + alpha), shape2 = (J - y + beta))), lty = 2)
map = x[which(y==max(ycoord))]
map = xcoord[which(y==max(ycoord))]
map = xcoord[which(ycoord==max(ycoord))]
plot(x = xcoord, y = ycoord, type = "l", xlab = expression(theta), ylab = expression(paste("p(", theta, ")")), main = paste("Max =", map))
lines(x = c(map, map), y = c(0, dbeta(x = map, shape1 = (y + alpha), shape2 = (J - y + beta))), lty = 2)
c(0, dbeta(x = map, shape1 = (y + alpha), shape2 = (J - y + beta)))
c(map, map)
y = 6
J = 10
alpha = 6
beta = 6
xcoord = seq(.001, .999, .001)
ycoord = dbeta(x = x, shape1 = (y + alpha), shape2 = (J - y + beta))
map = xcoord[which(ycoord==max(ycoord))]
plot(x = xcoord, y = ycoord, type = "l", xlab = expression(theta), ylab = expression(paste("p(", theta, ")")), main = paste("Max =", map))
lines(x = c(map, map), y = c(0, dbeta(x = map, shape1 = (y + alpha), shape2 = (J - y + beta))), lty = 2)
posteriorMode = (posteriorAlpha - 1)/(posteriorAlpha + posteriorBeta -2)
y = 6
J = 10
priorAlpha = 6
priorBeta = 6
posteriorAlpha = y + priorAlpha
posteriorBeta = J - y + priorBeta
xCoord = seq(.001, .999, .001)
yCoord = dbeta(x = xCoord, shape1 = posteriorAlpha, shape2 = posteriorBeta)
mapEstimate = xCoord[which(yCoord==max(yCoord))]
posteriorMode = (posteriorAlpha - 1)/(posteriorAlpha + posteriorBeta -2)
posteriorMean = (posteriorAlpha)/(posteriorAlpha + posteriorBeta)
posteriorVariance = (posteriorAlpha*posteriorBeta)/(((posteriorAlpha + posteriorBeta)^2)*(posteriorAlpha + posteriorBeta + 1))
posteriorSD = sqrt(posteriorVariance)
lines(x = c(map, map), y = c(0, dbeta(x = mapEstimate, shape1 = posteriorAlpha, shape2 = posteriorBeta)), lty = 2, col=2)
plot(x = xCoord, y = yCoord, type = "l", xlab = expression(theta), ylab = expression(paste("p(", theta, ")")), main = paste("Max =", map))
lines(x = c(map, map), y = c(0, dbeta(x = mapEstimate, shape1 = posteriorAlpha, shape2 = posteriorBeta)), lty = 2, col=2)
y = 6
J = 10
priorAlpha = 6
priorBeta = 6
posteriorAlpha = y + priorAlpha
posteriorBeta = J - y + priorBeta
xCoord = seq(.001, .999, .001)
yCoord = dbeta(x = xCoord, shape1 = posteriorAlpha, shape2 = posteriorBeta)
mapEstimate = xCoord[which(yCoord==max(yCoord))]
posteriorMode = (posteriorAlpha - 1)/(posteriorAlpha + posteriorBeta - 2)
posteriorMean = (posteriorAlpha)/(posteriorAlpha + posteriorBeta)
posteriorVariance = (posteriorAlpha*posteriorBeta)/(((posteriorAlpha + posteriorBeta)^2)*(posteriorAlpha + posteriorBeta + 1))
posteriorSD = sqrt(posteriorVariance)
plot(x = xCoord, y = yCoord, type = "l", xlab = expression(theta), ylab = expression(paste("p(", theta, ")")), main = paste("Max =", map))
lines(x = c(map, map), y = c(0, dbeta(x = mapEstimate, shape1 = posteriorAlpha, shape2 = posteriorBeta)), lty = 2, col=2)
y = 6
J = 10
priorAlpha = 6
priorBeta = 6
posteriorAlpha = y + priorAlpha
posteriorBeta = J - y + priorBeta
xCoord = seq(.001, .999, .001)
yCoord = dbeta(x = xCoord, shape1 = posteriorAlpha, shape2 = posteriorBeta)
mapEstimate = xCoord[which(yCoord==max(yCoord))]
posteriorMode = (posteriorAlpha - 1)/(posteriorAlpha + posteriorBeta - 2)
posteriorMean = (posteriorAlpha)/(posteriorAlpha + posteriorBeta)
posteriorVariance = (posteriorAlpha*posteriorBeta)/(((posteriorAlpha + posteriorBeta)^2)*(posteriorAlpha + posteriorBeta + 1))
posteriorSD = sqrt(posteriorVariance)
plot(x = xCoord, y = yCoord, type = "l", xlab = expression(theta), ylab = expression(paste("p(", theta, ")")), main = "Red = MAP; ")
lines(x = c(mapEstimate, mapEstimate), y = c(0, dbeta(x = mapEstimate, shape1 = posteriorAlpha, shape2 = posteriorBeta)), lty = 2, col=2)
lines(x = c(posteriorMean, posteriorMean), y = c(0, dbeta(x = mapEstimate, shape1 = posteriorAlpha, shape2 = posteriorBeta)), lty = 2, col=3)
y = 6
J = 10
priorAlpha = 1
priorBeta = 1
posteriorAlpha = y + priorAlpha
posteriorBeta = J - y + priorBeta
xCoord = seq(.001, .999, .001)
yCoord = dbeta(x = xCoord, shape1 = posteriorAlpha, shape2 = posteriorBeta)
mapEstimate = xCoord[which(yCoord==max(yCoord))]
posteriorMode = (posteriorAlpha - 1)/(posteriorAlpha + posteriorBeta - 2)
posteriorMean = (posteriorAlpha)/(posteriorAlpha + posteriorBeta)
posteriorVariance = (posteriorAlpha*posteriorBeta)/(((posteriorAlpha + posteriorBeta)^2)*(posteriorAlpha + posteriorBeta + 1))
posteriorSD = sqrt(posteriorVariance)
plot(x = xCoord, y = yCoord, type = "l", xlab = expression(theta), ylab = expression(paste("p(", theta, ")")), main = "Red = MAP; Green = EAP")
lines(x = c(mapEstimate, mapEstimate), y = c(0, dbeta(x = mapEstimate, shape1 = posteriorAlpha, shape2 = posteriorBeta)), lty = 2, col=2)
lines(x = c(posteriorMean, posteriorMean), y = c(0, dbeta(x = mapEstimate, shape1 = posteriorAlpha, shape2 = posteriorBeta)), lty = 2, col=3)
y = 6
J = 10
priorAlpha = 1
priorBeta = 1
posteriorAlpha = y + priorAlpha
posteriorBeta = J - y + priorBeta
xCoord = seq(.001, .999, .001)
yCoord = dbeta(x = xCoord, shape1 = posteriorAlpha, shape2 = posteriorBeta)
mapEstimate = xCoord[which(yCoord==max(yCoord))]
posteriorMode = (posteriorAlpha - 1)/(posteriorAlpha + posteriorBeta - 2)
posteriorMean = (posteriorAlpha)/(posteriorAlpha + posteriorBeta)
posteriorVariance = (posteriorAlpha*posteriorBeta)/(((posteriorAlpha + posteriorBeta)^2)*(posteriorAlpha + posteriorBeta + 1))
posteriorSD = sqrt(posteriorVariance)
plot(x = xCoord, y = yCoord, type = "l", xlab = expression(theta), ylab = expression(paste("p(", theta, ")")), main = paste("Red = MAP; Green = EAP; SD = ", posteriorSD))
lines(x = c(mapEstimate, mapEstimate), y = c(0, dbeta(x = mapEstimate, shape1 = posteriorAlpha, shape2 = posteriorBeta)), lty = 2, col=2)
lines(x = c(posteriorMean, posteriorMean), y = c(0, dbeta(x = mapEstimate, shape1 = posteriorAlpha, shape2 = posteriorBeta)), lty = 2, col=3)
y = 6
J = 10
priorAlpha = 1
priorBeta = 1
posteriorAlpha = y + priorAlpha
posteriorBeta = J - y + priorBeta
xCoord = seq(.001, .999, .001)
yCoord = dbeta(x = xCoord, shape1 = posteriorAlpha, shape2 = posteriorBeta)
mapEstimate = xCoord[which(yCoord==max(yCoord))]
posteriorMode = (posteriorAlpha - 1)/(posteriorAlpha + posteriorBeta - 2)
posteriorMean = (posteriorAlpha)/(posteriorAlpha + posteriorBeta)
posteriorVariance = (posteriorAlpha*posteriorBeta)/(((posteriorAlpha + posteriorBeta)^2)*(posteriorAlpha + posteriorBeta + 1))
posteriorSD = sqrt(posteriorVariance)
plot(x = xCoord, y = yCoord, type = "l", xlab = expression(theta), ylab = expression(paste("p(", theta, ")")), main = round(paste("Red = MAP; Green = EAP; SD = ", posteriorSD), 2))
round(paste("Red = MAP; Green = EAP; SD = ", posteriorSD), 2)
y = 6
J = 10
priorAlpha = 1
priorBeta = 1
posteriorAlpha = y + priorAlpha
posteriorBeta = J - y + priorBeta
xCoord = seq(.001, .999, .001)
yCoord = dbeta(x = xCoord, shape1 = posteriorAlpha, shape2 = posteriorBeta)
mapEstimate = xCoord[which(yCoord==max(yCoord))]
posteriorMode = (posteriorAlpha - 1)/(posteriorAlpha + posteriorBeta - 2)
posteriorMean = (posteriorAlpha)/(posteriorAlpha + posteriorBeta)
posteriorVariance = (posteriorAlpha*posteriorBeta)/(((posteriorAlpha + posteriorBeta)^2)*(posteriorAlpha + posteriorBeta + 1))
posteriorSD = sqrt(posteriorVariance)
plot(x = xCoord, y = yCoord, type = "l", xlab = expression(theta),
ylab = expression(paste("p(", theta, ")")), main = paste("Red = MAP; Green = EAP; SD = ", round(x = posteriorSD, digits = 2))
lines(x = c(mapEstimate, mapEstimate), y = c(0, dbeta(x = mapEstimate, shape1 = posteriorAlpha, shape2 = posteriorBeta)), lty = 2, col=2)
y = 6
J = 10
priorAlpha = 1
priorBeta = 1
posteriorAlpha = y + priorAlpha
posteriorBeta = J - y + priorBeta
xCoord = seq(.001, .999, .001)
yCoord = dbeta(x = xCoord, shape1 = posteriorAlpha, shape2 = posteriorBeta)
mapEstimate = xCoord[which(yCoord==max(yCoord))]
posteriorMode = (posteriorAlpha - 1)/(posteriorAlpha + posteriorBeta - 2)
posteriorMean = (posteriorAlpha)/(posteriorAlpha + posteriorBeta)
posteriorVariance = (posteriorAlpha*posteriorBeta)/(((posteriorAlpha + posteriorBeta)^2)*(posteriorAlpha + posteriorBeta + 1))
posteriorSD = sqrt(posteriorVariance)
plot(x = xCoord, y = yCoord, type = "l", xlab = expression(theta),
ylab = expression(paste("p(", theta, ")")), main = paste("Red = MAP; Green = EAP; SD = ", round(x = posteriorSD, digits = 2)))
lines(x = c(mapEstimate, mapEstimate), y = c(0, dbeta(x = mapEstimate, shape1 = posteriorAlpha, shape2 = posteriorBeta)), lty = 2, col=2)
lines(x = c(posteriorMean, posteriorMean), y = c(0, dbeta(x = mapEstimate, shape1 = posteriorAlpha, shape2 = posteriorBeta)), lty = 2, col=3)
y = 7
J = 10
priorAlpha = 1
priorBeta = 1
posteriorAlpha = y + priorAlpha
posteriorBeta = J - y + priorBeta
xCoord = seq(.001, .999, .001)
yCoord = dbeta(x = xCoord, shape1 = posteriorAlpha, shape2 = posteriorBeta)
mapEstimate = xCoord[which(yCoord==max(yCoord))]
posteriorMode = (posteriorAlpha - 1)/(posteriorAlpha + posteriorBeta - 2)
posteriorMean = (posteriorAlpha)/(posteriorAlpha + posteriorBeta)
posteriorVariance = (posteriorAlpha*posteriorBeta)/(((posteriorAlpha + posteriorBeta)^2)*(posteriorAlpha + posteriorBeta + 1))
posteriorSD = sqrt(posteriorVariance)
plot(x = xCoord, y = yCoord, type = "l", xlab = expression(theta),
ylab = expression(paste("p(", theta, ")")), main = paste("Red = MAP = ", round(x = mapEstimate, digits = 2),
"; Green = EAP = ", round(x = posteriorMean, digits = 2),
"; SD = ", round(x = posteriorSD, digits = 2)))
lines(x = c(mapEstimate, mapEstimate), y = c(0, dbeta(x = mapEstimate, shape1 = posteriorAlpha, shape2 = posteriorBeta)), lty = 2, col=2)
lines(x = c(posteriorMean, posteriorMean), y = c(0, dbeta(x = mapEstimate, shape1 = posteriorAlpha, shape2 = posteriorBeta)), lty = 2, col=3)
y = 7
J = 10
priorAlpha = 1
priorBeta = 1
posteriorAlpha = y + priorAlpha
posteriorBeta = J - y + priorBeta
xCoord = seq(.001, .999, .001)
yCoord = dbeta(x = xCoord, shape1 = posteriorAlpha, shape2 = posteriorBeta)
mapEstimate = xCoord[which(yCoord==max(yCoord))]
posteriorMode = (posteriorAlpha - 1)/(posteriorAlpha + posteriorBeta - 2)
posteriorMean = (posteriorAlpha)/(posteriorAlpha + posteriorBeta)
posteriorVariance = (posteriorAlpha*posteriorBeta)/(((posteriorAlpha + posteriorBeta)^2)*(posteriorAlpha + posteriorBeta + 1))
posteriorSD = sqrt(posteriorVariance)
plot(x = xCoord, y = yCoord, type = "l", xlab = expression(theta),
ylab = expression(paste("p(", theta, ")")), main = paste("Red = MAP = ", round(x = mapEstimate, digits = 2),
"; Green = EAP = ", round(x = posteriorMean, digits = 2),
"; SD = ", round(x = posteriorSD, digits = 2)))
lines(x = c(mapEstimate, mapEstimate), y = c(0, dbeta(x = mapEstimate, shape1 = posteriorAlpha, shape2 = posteriorBeta)), lty = 2, col=2)
lines(x = c(posteriorMean, posteriorMean), y = c(0, dbeta(x = posteriorMean, shape1 = posteriorAlpha, shape2 = posteriorBeta)), lty = 2, col=3)
y = 7
J = 10
priorAlpha = 10
priorBeta = 1
posteriorAlpha = y + priorAlpha
posteriorBeta = J - y + priorBeta
xCoord = seq(.001, .999, .001)
yCoord = dbeta(x = xCoord, shape1 = posteriorAlpha, shape2 = posteriorBeta)
mapEstimate = xCoord[which(yCoord==max(yCoord))]
posteriorMode = (posteriorAlpha - 1)/(posteriorAlpha + posteriorBeta - 2)
posteriorMean = (posteriorAlpha)/(posteriorAlpha + posteriorBeta)
posteriorVariance = (posteriorAlpha*posteriorBeta)/(((posteriorAlpha + posteriorBeta)^2)*(posteriorAlpha + posteriorBeta + 1))
posteriorSD = sqrt(posteriorVariance)
plot(x = xCoord, y = yCoord, type = "l", xlab = expression(theta),
ylab = expression(paste("p(", theta, ")")), main = paste("Red = MAP = ", round(x = mapEstimate, digits = 2),
"; Green = EAP = ", round(x = posteriorMean, digits = 2),
"; SD = ", round(x = posteriorSD, digits = 2)))
lines(x = c(mapEstimate, mapEstimate), y = c(0, dbeta(x = mapEstimate, shape1 = posteriorAlpha, shape2 = posteriorBeta)), lty = 2, col=2)
lines(x = c(posteriorMean, posteriorMean), y = c(0, dbeta(x = posteriorMean, shape1 = posteriorAlpha, shape2 = posteriorBeta)), lty = 2, col=3)
yMat = cbind(yCoordPrior, yCoordLikelihood, yCoordPosterior)
xMat = cbind(xCoord, xCoord, xCoord)
y = 7
J = 10
priorAlpha = 1
priorBeta = 1
posteriorAlpha = y + priorAlpha
posteriorBeta = J - y + priorBeta
xCoord = seq(.001, .999, .001)
yCoordLikelihood = dbinom(x = 7, size = 10, prob =  xCoord)
yCoordPosterior = dbeta(x = xCoord, shape1 = posteriorAlpha, shape2 = posteriorBeta)
yCoordPrior = dbeta(x = xCoord, shape1 = priorAlpha, shape2 = priorBeta)
mapEstimate = xCoord[which(yCoord==max(yCoord))]
posteriorMode = (posteriorAlpha - 1)/(posteriorAlpha + posteriorBeta - 2)
posteriorMean = (posteriorAlpha)/(posteriorAlpha + posteriorBeta)
posteriorVariance = (posteriorAlpha*posteriorBeta)/(((posteriorAlpha + posteriorBeta)^2)*(posteriorAlpha + posteriorBeta + 1))
posteriorSD = sqrt(posteriorVariance)
yMat = cbind(yCoordPrior, yCoordLikelihood, yCoordPosterior)
xMat = cbind(xCoord, xCoord, xCoord)
matplot(x = xCoord, y = yCoord, type = "l", xlab = expression(theta),
ylab = expression(paste("p(", theta, ")")), main = paste("Red = MAP = ", round(x = mapEstimate, digits = 2),
"; Green = EAP = ", round(x = posteriorMean, digits = 2),
"; SD = ", round(x = posteriorSD, digits = 2)))
matplot(x = xMat, y = yMat, type = "l", xlab = expression(theta),
ylab = expression(paste("p(", theta, ")")), main = paste("Red = MAP = ", round(x = mapEstimate, digits = 2),
"; Green = EAP = ", round(x = posteriorMean, digits = 2),
"; SD = ", round(x = posteriorSD, digits = 2)))
y = 7
J = 10
priorAlpha = 1
priorBeta = 1
posteriorAlpha = y + priorAlpha
posteriorBeta = J - y + priorBeta
xCoord = seq(.001, .999, .001)
yCoordLikelihood = dbinom(x = 7, size = 10, prob =  xCoord)
yCoordPosterior = dbeta(x = xCoord, shape1 = posteriorAlpha, shape2 = posteriorBeta)
yCoordPrior = dbeta(x = xCoord, shape1 = priorAlpha, shape2 = priorBeta)
mapEstimate = xCoord[which(yCoord==max(yCoord))]
posteriorMode = (posteriorAlpha - 1)/(posteriorAlpha + posteriorBeta - 2)
posteriorMean = (posteriorAlpha)/(posteriorAlpha + posteriorBeta)
posteriorVariance = (posteriorAlpha*posteriorBeta)/(((posteriorAlpha + posteriorBeta)^2)*(posteriorAlpha + posteriorBeta + 1))
posteriorSD = sqrt(posteriorVariance)
yMat = cbind(yCoordPrior, yCoordLikelihood, yCoordPosterior)
xMat = cbind(xCoord, xCoord, xCoord)
matplot(x = xMat, y = yMat, type = "l", xlab = expression(theta),
ylab = expression(paste("p(", theta, ")")), main = paste("Red = MAP = ", round(x = mapEstimate, digits = 2),
"; Green = EAP = ", round(x = posteriorMean, digits = 2),
"; SD = ", round(x = posteriorSD, digits = 2)),
lwd = 3)
lines(x = c(mapEstimate, mapEstimate), y = c(0, dbeta(x = mapEstimate, shape1 = posteriorAlpha, shape2 = posteriorBeta)), lty = 2, col=2)
lines(x = c(posteriorMean, posteriorMean), y = c(0, dbeta(x = posteriorMean, shape1 = posteriorAlpha, shape2 = posteriorBeta)), lty = 2, col=3)
y = 7
J = 10
priorAlpha = 1
priorBeta = 1
posteriorAlpha = y + priorAlpha
posteriorBeta = J - y + priorBeta
xCoord = seq(.001, .999, .001)
yCoordLikelihood = dbinom(x = 7, size = 10, prob =  xCoord)
yCoordPosterior = dbeta(x = xCoord, shape1 = posteriorAlpha, shape2 = posteriorBeta)
yCoordPrior = dbeta(x = xCoord, shape1 = priorAlpha, shape2 = priorBeta)
mapEstimate = xCoord[which(yCoord==max(yCoord))]
posteriorMode = (posteriorAlpha - 1)/(posteriorAlpha + posteriorBeta - 2)
posteriorMean = (posteriorAlpha)/(posteriorAlpha + posteriorBeta)
posteriorVariance = (posteriorAlpha*posteriorBeta)/(((posteriorAlpha + posteriorBeta)^2)*(posteriorAlpha + posteriorBeta + 1))
posteriorSD = sqrt(posteriorVariance)
yMat = cbind(yCoordPrior, yCoordLikelihood, yCoordPosterior)
xMat = cbind(xCoord, xCoord, xCoord)
matplot(x = xMat, y = yMat, type = "l", xlab = expression(theta),
ylab = expression(paste("p(", theta, ")")), main = paste("Red = MAP = ", round(x = mapEstimate, digits = 2),
"; Green = EAP = ", round(x = posteriorMean, digits = 2),
"; SD = ", round(x = posteriorSD, digits = 2)),
lwd = 3)
legend(x = 0, y = 1, legend = c("Prior", "Likelihood", "Posterior"), col = 1:3, lty = 1:3, lwd = 1:3)
y = 7
J = 10
priorAlpha = 1
priorBeta = 1
posteriorAlpha = y + priorAlpha
posteriorBeta = J - y + priorBeta
xCoord = seq(.001, .999, .001)
yCoordLikelihood = dbinom(x = 7, size = 10, prob =  xCoord)
yCoordPosterior = dbeta(x = xCoord, shape1 = posteriorAlpha, shape2 = posteriorBeta)
yCoordPrior = dbeta(x = xCoord, shape1 = priorAlpha, shape2 = priorBeta)
mapEstimate = xCoord[which(yCoord==max(yCoord))]
posteriorMode = (posteriorAlpha - 1)/(posteriorAlpha + posteriorBeta - 2)
posteriorMean = (posteriorAlpha)/(posteriorAlpha + posteriorBeta)
posteriorVariance = (posteriorAlpha*posteriorBeta)/(((posteriorAlpha + posteriorBeta)^2)*(posteriorAlpha + posteriorBeta + 1))
posteriorSD = sqrt(posteriorVariance)
yMat = cbind(yCoordPrior, yCoordLikelihood, yCoordPosterior)
xMat = cbind(xCoord, xCoord, xCoord)
matplot(x = xMat, y = yMat, type = "l", xlab = expression(theta),
ylab = expression(paste("p(", theta, ")")), main = paste("Red = MAP = ", round(x = mapEstimate, digits = 2),
"; Green = EAP = ", round(x = posteriorMean, digits = 2),
"; SD = ", round(x = posteriorSD, digits = 2)),
lwd = 3)
legend(x = 0, y = 1, legend = c("Prior", "Likelihood", "Posterior"), col = 1:3, lty = 1:3, lwd = 1:3)
y = 7
J = 10
priorAlpha = 1
priorBeta = 1
posteriorAlpha = y + priorAlpha
posteriorBeta = J - y + priorBeta
xCoord = seq(.001, .999, .001)
yCoord = dbeta(x = xCoord, shape1 = posteriorAlpha, shape2 = posteriorBeta)
mapEstimate = xCoord[which(yCoord==max(yCoord))]
posteriorMode = (posteriorAlpha - 1)/(posteriorAlpha + posteriorBeta - 2)
posteriorMean = (posteriorAlpha)/(posteriorAlpha + posteriorBeta)
posteriorVariance = (posteriorAlpha*posteriorBeta)/(((posteriorAlpha + posteriorBeta)^2)*(posteriorAlpha + posteriorBeta + 1))
posteriorSD = sqrt(posteriorVariance)
plot(x = xCoord, y = yCoord, type = "l", xlab = expression(theta),
ylab = expression(paste("p(", theta, ")")), main = paste("Red = MAP = ", round(x = mapEstimate, digits = 2),
"; Green = EAP = ", round(x = posteriorMean, digits = 2),
"; SD = ", round(x = posteriorSD, digits = 2)))
lines(x = c(mapEstimate, mapEstimate), y = c(0, dbeta(x = mapEstimate, shape1 = posteriorAlpha, shape2 = posteriorBeta)), lty = 2, col=2)
lines(x = c(posteriorMean, posteriorMean), y = c(0, dbeta(x = posteriorMean, shape1 = posteriorAlpha, shape2 = posteriorBeta)), lty = 2, col=3)
y = 7
J = 10
priorAlpha = 1
priorBeta = 1
posteriorAlpha = y + priorAlpha
posteriorBeta = J - y + priorBeta
xCoord = seq(.001, .999, .001)
yCoordLikelihood = dbinom(x = 7, size = 10, prob =  xCoord)
yCoordPosterior = dbeta(x = xCoord, shape1 = posteriorAlpha, shape2 = posteriorBeta)
yCoordPrior = dbeta(x = xCoord, shape1 = priorAlpha, shape2 = priorBeta)
mapEstimate = xCoord[which(yCoord==max(yCoord))]
posteriorMode = (posteriorAlpha - 1)/(posteriorAlpha + posteriorBeta - 2)
posteriorMean = (posteriorAlpha)/(posteriorAlpha + posteriorBeta)
posteriorVariance = (posteriorAlpha*posteriorBeta)/(((posteriorAlpha + posteriorBeta)^2)*(posteriorAlpha + posteriorBeta + 1))
posteriorSD = sqrt(posteriorVariance)
yMat = cbind(yCoordPrior, yCoordLikelihood, yCoordPosterior)
xMat = cbind(xCoord, xCoord, xCoord)
matplot(x = xMat, y = yMat, type = "l", xlab = expression(theta),
ylab = expression(paste("p(", theta, ")")), main = paste("Red = MAP = ", round(x = mapEstimate, digits = 2),
"; Green = EAP = ", round(x = posteriorMean, digits = 2),
"; SD = ", round(x = posteriorSD, digits = 2)),
lwd = 3)
legend(x = 0, y = 1, legend = c("Prior", "Likelihood", "Posterior"), col = 1:3, lty = 1:3, lwd = 1:3)
y = 7
J = 10
priorAlpha = 6
priorBeta = 6
posteriorAlpha = y + priorAlpha
posteriorBeta = J - y + priorBeta
xCoord = seq(.001, .999, .001)
yCoordLikelihood = dbinom(x = 7, size = 10, prob =  xCoord)
yCoordPosterior = dbeta(x = xCoord, shape1 = posteriorAlpha, shape2 = posteriorBeta)
yCoordPrior = dbeta(x = xCoord, shape1 = priorAlpha, shape2 = priorBeta)
mapEstimate = xCoord[which(yCoord==max(yCoord))]
posteriorMode = (posteriorAlpha - 1)/(posteriorAlpha + posteriorBeta - 2)
posteriorMean = (posteriorAlpha)/(posteriorAlpha + posteriorBeta)
posteriorVariance = (posteriorAlpha*posteriorBeta)/(((posteriorAlpha + posteriorBeta)^2)*(posteriorAlpha + posteriorBeta + 1))
posteriorSD = sqrt(posteriorVariance)
yMat = cbind(yCoordPrior, yCoordLikelihood, yCoordPosterior)
xMat = cbind(xCoord, xCoord, xCoord)
matplot(x = xMat, y = yMat, type = "l", xlab = expression(theta),
ylab = expression(paste("p(", theta, ")")), main = paste("Red = MAP = ", round(x = mapEstimate, digits = 2),
"; Green = EAP = ", round(x = posteriorMean, digits = 2),
"; SD = ", round(x = posteriorSD, digits = 2)),
lwd = 3)
legend(x = 0, y = 1, legend = c("Prior", "Likelihood", "Posterior"), col = 1:3, lty = 1:3, lwd = 1:3)
